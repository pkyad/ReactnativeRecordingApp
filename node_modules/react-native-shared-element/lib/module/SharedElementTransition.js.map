{"version":3,"sources":["SharedElementTransition.tsx"],"names":["React","View","Text","Animated","Dimensions","StyleSheet","processColor","Platform","RNSharedElementTransitionView","NativeAnimationType","Map","NativeResizeType","NativeAlignType","debugColors","startNode","endNode","pink","startAncestor","endAncestor","debugStyles","create","overlay","absoluteFillObject","backgroundColor","opacity","text","marginLeft","marginTop","fontSize","box","position","borderWidth","borderStyle","RNAnimatedSharedElementTransitionView","createAnimatedComponent","undefined","SharedElementTransition","node","nodeStyle","OS","parentInstance","child","Children","only","props","children","flatten","style","transform","resizeMode","borderColor","color","nodeHandle","isParent","state","onMeasureNode","event","nativeEvent","onMeasure","setState","SharedElementComponent","isNotAvailableWarningShown","console","warn","debug","name","layout","isContentDifferent","x","contentX","y","contentY","width","contentWidth","height","contentHeight","isFullScreen","visibleX","visibleY","visibleWidth","get","visibleHeight","absoluteFill","left","top","borderRadius","Math","max","overflow","start","end","animation","resize","align","otherProps","prepareNode","ancestor","renderDebugLayer","Component","defaultProps"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  Text,\n  Animated,\n  Dimensions,\n  StyleSheet,\n  processColor,\n  Platform,\n} from 'react-native';\nimport {\n  SharedElementNode,\n  SharedElementAnimation,\n  SharedElementResize,\n  SharedElementAlign,\n  SharedElementNodeType,\n  SharedElementContentType,\n} from './types';\nimport { RNSharedElementTransitionView } from './RNSharedElementTransitionView';\n\nexport type SharedElementMeasureData = {\n  node: SharedElementNodeType;\n  layout: {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    visibleX: number;\n    visibleY: number;\n    visibleWidth: number;\n    visibleHeight: number;\n    contentX: number;\n    contentY: number;\n    contentWidth: number;\n    contentHeight: number;\n  };\n  contentType: SharedElementContentType;\n  style: {\n    borderRadius: number;\n  };\n};\n\nexport type SharedElementOnMeasureEvent = {\n  nativeEvent: SharedElementMeasureData;\n};\n\nexport type SharedElementTransitionProps = {\n  start: {\n    node: SharedElementNode | null;\n    ancestor: SharedElementNode | null;\n  };\n  end: {\n    node: SharedElementNode | null;\n    ancestor: SharedElementNode | null;\n  };\n  position: number | any | void;\n  animation: SharedElementAnimation;\n  resize?: SharedElementResize;\n  align?: SharedElementAlign;\n  debug?: boolean;\n  style?: any;\n  onMeasure?: (event: SharedElementOnMeasureEvent) => void;\n  SharedElementComponent?: any;\n};\n\nconst NativeAnimationType = new Map<SharedElementAnimation, number>([\n  ['move', 0],\n  ['fade', 1],\n  ['fade-in', 2],\n  ['fade-out', 3],\n]);\n\nconst NativeResizeType = new Map<SharedElementResize, number>([\n  ['auto', 0],\n  ['stretch', 1],\n  ['clip', 2],\n  ['none', 3],\n]);\n\nconst NativeAlignType = new Map<SharedElementAlign, number>([\n  ['auto', 0],\n  ['left-top', 1],\n  ['left-center', 2],\n  ['left-bottom', 3],\n  ['right-top', 4],\n  ['right-center', 5],\n  ['right-bottom', 6],\n  ['center-top', 7],\n  ['center-center', 8],\n  ['center-bottom', 9],\n]);\n\nconst debugColors = {\n  startNode: '#82B2E8',\n  endNode: '#5EFF9B',\n  pink: '#DC9CFF',\n  startAncestor: '#E88F82',\n  endAncestor: '#FFDC8F',\n};\n\nconst debugStyles = StyleSheet.create({\n  overlay: {\n    ...StyleSheet.absoluteFillObject,\n    backgroundColor: 'black',\n    opacity: 0.3,\n  },\n  text: {\n    marginLeft: 3,\n    marginTop: 3,\n    fontSize: 10,\n  },\n  box: {\n    position: 'absolute',\n    borderWidth: 1,\n    borderStyle: 'dashed',\n  },\n});\n\ntype StateType = {\n  startNode?: SharedElementMeasureData;\n  endNode?: SharedElementMeasureData;\n  startAncestor?: SharedElementMeasureData;\n  endAncestor?: SharedElementMeasureData;\n};\n\nexport const RNAnimatedSharedElementTransitionView = RNSharedElementTransitionView\n  ? Animated.createAnimatedComponent(RNSharedElementTransitionView)\n  : undefined;\n\nexport class SharedElementTransition extends React.Component<\n  SharedElementTransitionProps,\n  StateType\n> {\n  static prepareNode(node: SharedElementNode | null): any {\n    let nodeStyle: any = {};\n    if (Platform.OS === 'android' && node && node.parentInstance) {\n      const child = React.Children.only(node.parentInstance.props.children);\n      const props = child ? child.props : {};\n      nodeStyle = StyleSheet.flatten([props.style]) || {};\n      delete nodeStyle.transform;\n      delete nodeStyle.opacity;\n      nodeStyle.resizeMode = nodeStyle.resizeMode || props.resizeMode;\n      if (nodeStyle.backgroundColor)\n        nodeStyle.backgroundColor = processColor(nodeStyle.backgroundColor);\n      if (nodeStyle.borderColor)\n        nodeStyle.borderColor = processColor(nodeStyle.borderColor);\n      if (nodeStyle.color) nodeStyle.color = processColor(nodeStyle.color);\n    }\n    return node\n      ? {\n          nodeHandle: node.nodeHandle,\n          isParent: node.isParent,\n          nodeStyle,\n        }\n      : undefined;\n  }\n\n  static defaultProps = {\n    start: {},\n    end: {},\n    SharedElementComponent: RNAnimatedSharedElementTransitionView,\n    animation: 'move',\n    resize: 'auto',\n    align: 'auto',\n  };\n\n  constructor(props: SharedElementTransitionProps) {\n    super(props);\n    if (\n      !props.SharedElementComponent &&\n      !SharedElementTransition.isNotAvailableWarningShown\n    ) {\n      SharedElementTransition.isNotAvailableWarningShown = true;\n      if (Platform.OS === 'android' || Platform.OS === 'ios') {\n        console.warn(\n          'RNSharedElementTransition is not available, did you forget to link `react-native-shared-element` into your project?'\n        );\n      } else {\n        console.warn(\n          'RNSharedElementTransition is not available on this platform'\n        );\n      }\n    }\n  }\n\n  state: StateType = {};\n\n  private static isNotAvailableWarningShown = false;\n\n  onMeasureNode = (event: SharedElementOnMeasureEvent) => {\n    const { nativeEvent } = event;\n    const { onMeasure } = this.props;\n    this.setState({\n      [`${nativeEvent.node}`]: nativeEvent,\n    });\n    // console.log(\"onMeasure: \", nativeEvent);\n    if (onMeasure) {\n      onMeasure(event);\n    }\n  };\n\n  renderDebugOverlay() {\n    if (!this.props.debug) {\n      return;\n    }\n    return <View style={debugStyles.overlay} />;\n  }\n\n  renderDebugLayer(name: SharedElementNodeType) {\n    const event = this.state[name];\n    if (!event || !this.props.debug) return;\n    const { layout, style } = event;\n    const isContentDifferent =\n      layout.x !== layout.contentX ||\n      layout.y !== layout.contentY ||\n      layout.width !== layout.contentWidth ||\n      layout.height !== layout.contentHeight;\n    const isFullScreen =\n      layout.visibleX === 0 &&\n      layout.visibleY === 0 &&\n      layout.visibleWidth === Dimensions.get('window').width &&\n      layout.visibleHeight === Dimensions.get('window').height;\n\n    const color = debugColors[name];\n    return (\n      <View style={StyleSheet.absoluteFill}>\n        {isContentDifferent ? (\n          <View\n            style={[\n              debugStyles.box,\n              {\n                left: layout.contentX,\n                top: layout.contentY,\n                width: layout.contentWidth,\n                height: layout.contentHeight,\n                borderColor: color,\n                opacity: 0.5,\n              },\n            ]}\n          >\n            <Text style={[debugStyles.text, { color }]}>Content</Text>\n          </View>\n        ) : (\n          undefined\n        )}\n        <View\n          style={[\n            debugStyles.box,\n            {\n              left: layout.x,\n              top: layout.y,\n              width: layout.width,\n              height: layout.height,\n              borderColor: color,\n              borderRadius: style.borderRadius || 0,\n            },\n          ]}\n        >\n          <Text\n            style={[\n              debugStyles.text,\n              { color, marginTop: Math.max((style.borderRadius || 0) - 7, 3) },\n            ]}\n          >\n            {name}\n          </Text>\n        </View>\n        <View\n          style={{\n            position: 'absolute',\n            overflow: 'hidden',\n            left: layout.visibleX,\n            top: layout.visibleY,\n            width: layout.visibleWidth,\n            height: layout.visibleHeight,\n          }}\n        >\n          <View\n            style={[\n              {\n                position: 'absolute',\n                left: layout.x - layout.visibleX,\n                top: layout.y - layout.visibleY,\n                width: layout.width,\n                height: layout.height,\n                borderRadius: style.borderRadius || 0,\n                backgroundColor: isFullScreen ? 'transparent' : color + '80',\n              },\n            ]}\n          />\n        </View>\n      </View>\n    );\n  }\n\n  render() {\n    const {\n      SharedElementComponent,\n      start,\n      end,\n      position,\n      animation,\n      resize,\n      align,\n      onMeasure,\n      debug,\n      // style,\n      ...otherProps\n    } = this.props;\n    if (!SharedElementComponent) {\n      return null;\n    }\n    return (\n      <View style={StyleSheet.absoluteFill}>\n        <SharedElementComponent\n          startNode={{\n            node: SharedElementTransition.prepareNode(start.node),\n            ancestor: SharedElementTransition.prepareNode(start.ancestor),\n          }}\n          endNode={{\n            node: SharedElementTransition.prepareNode(end.node),\n            ancestor: SharedElementTransition.prepareNode(end.ancestor),\n          }}\n          nodePosition={position}\n          animation={NativeAnimationType.get(animation)}\n          // @ts-ignore\n          resize={NativeResizeType.get(resize)}\n          // @ts-ignore\n          align={NativeAlignType.get(align)}\n          onMeasureNode={debug ? this.onMeasureNode : onMeasure}\n          // style={debug && style ? [debugStyles.content, style] : style}\n          {...otherProps}\n        />\n        {/*this.renderDebugOverlay()*/}\n        {this.renderDebugLayer('startNode')}\n        {this.renderDebugLayer('endNode')}\n      </View>\n    );\n  }\n}\n"]}