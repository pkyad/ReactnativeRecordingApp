{"version":3,"sources":["RNSharedElementView.ts"],"names":["RNSharedElementAlign","RNSharedElementResize","Rect","initElement","element","style","position","left","top","pointerEvents","transformOrigin","transformStyle","backfaceVisibility","backgroundSize","boxSizing","overflow","createTransform","translateX","translateY","scaleX","scaleY","RNSharedElementView","parentLayout","empty","document","createElement","layout","originalLayout","_contentElement","contentLayout","resize","Auto","align","equals","Stretch","updateLayoutForScale","updateLayoutForResize","updateStyle","width","height","x","y","scaledWidth","scaledHeight","widthPx","heightPx","transform","contentStyle","contentX","contentY","contentWidth","contentHeight","Clip","None","LeftTop","LeftCenter","LeftBottom","RightTop","RightCenter","RightBottom","CenterTop","CenterCenter","CenterBottom","contentWidthPx","contentHeightPx","value","removeChild","appendChild"],"mappings":"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","sourcesContent":["import {\n  IHTMLElement,\n  RNSharedElementAlign,\n  RNSharedElementResize,\n} from './types';\nimport { Rect } from './Rect';\nimport { RNSharedElementStyle } from './RNSharedElementStyle';\n\nfunction initElement(element: IHTMLElement): IHTMLElement {\n  const { style } = element;\n\n  // Reset default layout behavior\n  style.position = 'absolute';\n  style.left = '0px';\n  style.top = '0px';\n  style.pointerEvents = 'none';\n  style.transformOrigin = '0% 0%';\n  style.transformStyle = 'preserve-3d';\n  style.backfaceVisibility = 'hidden';\n  style.backgroundSize = '100% 100%';\n  style.boxSizing = 'border-box';\n  style.overflow = 'hidden';\n\n  // Clear styles\n  // style.backgroundColor = null;\n\n  return element;\n}\n\nfunction createTransform(\n  translateX: number = 0,\n  translateY: number = 0,\n  scaleX: number = 1,\n  scaleY: number = 1\n) {\n  return `matrix3d(\n    ${scaleX}, 0, 0, 0,\n    0, ${scaleY}, 0, 0,\n    0, 0, 1, 0,\n    ${translateX}, ${translateY}, 0, 1\n)`;\n}\n\nexport class RNSharedElementView {\n  public parentLayout: Rect = Rect.empty;\n  // @ts-ignore\n  public readonly element = initElement(document.createElement('div'));\n  public layout: Rect = Rect.empty;\n  public style: RNSharedElementStyle | null = null;\n  public originalLayout: Rect = Rect.empty;\n  public _contentElement: IHTMLElement | null = null;\n  public contentLayout: Rect = Rect.empty;\n  public resize: RNSharedElementResize = RNSharedElementResize.Auto;\n  public align: RNSharedElementAlign = RNSharedElementAlign.Auto;\n\n  get contentElement(): IHTMLElement | null {\n    return this._contentElement;\n  }\n  set contentElement(value: IHTMLElement | null) {\n    if (this._contentElement === value) return;\n    if (this._contentElement) {\n      this.element.removeChild(this._contentElement);\n    }\n    this._contentElement = value ? initElement(value) : null;\n    if (this._contentElement) {\n      this.element.appendChild(this._contentElement);\n    }\n  }\n\n  public updateLayout() {\n    const { layout, contentLayout, resize } = this;\n    if (layout.equals(Rect.empty)) return;\n\n    // Run either the stretch (scale) or resize algorithm\n    if (\n      resize === RNSharedElementResize.Stretch ||\n      (resize === RNSharedElementResize.Auto && contentLayout.equals(layout))\n    ) {\n      this.updateLayoutForScale();\n    } else {\n      this.updateLayoutForResize();\n    }\n\n    // Update style\n    this.updateStyle();\n  }\n\n  /**\n   * Updates the layout by only changing the scale of the\n   * element. This technique achieves a very high performance\n   * as it can be handled completely by the GPU, requiring\n   * no layout passes in the browser. It is however also more\n   * limited and can't be used for all effects.\n   */\n  private updateLayoutForScale() {\n    const { layout, originalLayout, parentLayout, element } = this;\n\n    // Update layout\n    const { width, height } = originalLayout;\n    const { x, y, width: scaledWidth, height: scaledHeight } = layout;\n\n    // Update size\n    const widthPx = width + 'px';\n    const heightPx = height + 'px';\n    const { style } = element;\n    if (style.width !== widthPx) style.width = widthPx;\n    if (style.height !== heightPx) style.height = heightPx;\n\n    // Calculate translation\n    const translateX = x - parentLayout.x;\n    const translateY = y - parentLayout.y;\n\n    // Calculate scale\n    const scaleX = scaledWidth / width;\n    const scaleY = scaledHeight / height;\n\n    // Update transform matrix\n    style.transform = createTransform(translateX, translateY, scaleX, scaleY);\n\n    // Update content element\n    const { style: contentStyle } = this._contentElement!;\n    if (contentStyle.width !== widthPx) contentStyle.width = widthPx;\n    if (contentStyle.height !== heightPx) contentStyle.height = heightPx;\n    contentStyle.transform = createTransform();\n  }\n\n  /**\n   * Updates the layout by updating the size of the\n   * element and its content element. This algorihm\n   * can achieve any possible layout, as well as\n   * clipping of the content.\n   */\n  private updateLayoutForResize() {\n    const {\n      layout,\n      parentLayout,\n      element,\n      contentLayout,\n      originalLayout,\n      align,\n      resize,\n    } = this;\n    const { x, y, width, height } = layout;\n\n    // Update size\n    const widthPx = width + 'px';\n    const heightPx = height + 'px';\n    const { style } = element;\n    if (style.width !== widthPx) style.width = widthPx;\n    if (style.height !== heightPx) style.height = heightPx;\n\n    // Update transform\n    const translateX = x - parentLayout.x;\n    const translateY = y - parentLayout.y;\n    style.transform = createTransform(translateX, translateY);\n\n    // Content\n    if (!this._contentElement) return;\n    let {\n      x: contentX,\n      y: contentY,\n      width: contentWidth,\n      height: contentHeight,\n    } = contentLayout;\n\n    // Get content size\n    let overflow = 'hidden';\n    switch (resize) {\n      case RNSharedElementResize.Auto:\n        // keep original size\n        break;\n      case RNSharedElementResize.Stretch:\n        contentWidth = width;\n        contentHeight = height;\n        break;\n      case RNSharedElementResize.Clip:\n        contentWidth = originalLayout.width;\n        contentHeight = originalLayout.height;\n        break;\n      case RNSharedElementResize.None:\n        contentWidth = originalLayout.width;\n        contentHeight = originalLayout.height;\n        overflow = 'visible';\n        break;\n    }\n\n    // Align\n    switch (align) {\n      case RNSharedElementAlign.LeftTop:\n        contentX = 0;\n        contentY = 0;\n        break;\n      case RNSharedElementAlign.LeftCenter:\n        contentX = 0;\n        contentY = (height - contentHeight) / 2;\n        break;\n      case RNSharedElementAlign.LeftBottom:\n        contentX = 0;\n        contentY = height - contentHeight;\n        break;\n      case RNSharedElementAlign.RightTop:\n        contentX = width - contentWidth;\n        contentY = 0;\n        break;\n      case RNSharedElementAlign.RightCenter:\n        contentX = width - contentWidth;\n        contentY = (height - contentHeight) / 2;\n        break;\n      case RNSharedElementAlign.RightBottom:\n        contentX = width - contentWidth;\n        contentY = height - contentHeight;\n        break;\n      case RNSharedElementAlign.CenterTop:\n        contentX = (width - contentWidth) / 2;\n        contentY = 0;\n        break;\n      case RNSharedElementAlign.Auto:\n      case RNSharedElementAlign.CenterCenter:\n        contentX = (width - contentWidth) / 2;\n        contentY = (height - contentHeight) / 2;\n        break;\n      case RNSharedElementAlign.CenterBottom:\n        contentX = (width - contentWidth) / 2;\n        contentY = height - contentHeight;\n        break;\n    }\n\n    // Update content size\n    const contentWidthPx = contentWidth + 'px';\n    const contentHeightPx = contentHeight + 'px';\n    const { style: contentStyle } = this._contentElement;\n    if (contentStyle.width !== widthPx) contentStyle.width = contentWidthPx;\n    if (contentStyle.height !== heightPx) contentStyle.height = contentHeightPx;\n\n    // Update content transform\n    contentStyle.transform = createTransform(contentX, contentY);\n\n    // Update overflow\n    if (element.style.overflow !== overflow) {\n      element.style.overflow = overflow;\n    }\n  }\n\n  private updateStyle() {\n    //const { style, element } = this;\n    //if (!style) return;\n    // element.style.backgroundColor = formatColor(style.backgroundColor);\n  }\n}\n"]}