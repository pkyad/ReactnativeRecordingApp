{"version":3,"sources":["RNSharedElementNodeManager.ts"],"names":["RNSharedElementNode","RNSharedElementNodeManager","nodes","Map","domNode","isParent","ancestorDomNode","node","get","addRef","set","refCount","releaseRef","delete","instance"],"mappings":"gIAAA,OAASA,mBAAT,KAAoC,uBAApC,CAGA,UAAaC,CAAAA,0BAAb,wGACUC,KADV,CACkB,GAAIC,CAAAA,GAAJ,EADlB,iFAYIC,OAZJ,CAaIC,QAbJ,CAcIC,eAdJ,CAeyB,CACrB,GAAIC,CAAAA,IAAI,CAAG,KAAKL,KAAL,CAAWM,GAAX,CAAeJ,OAAf,CAAX,CACA,GAAIG,IAAJ,CAAU,CACRA,IAAI,CAACE,MAAL,GACA,MAAOF,CAAAA,IAAP,CACD,CACDA,IAAI,CAAG,GAAIP,CAAAA,mBAAJ,CAAwBI,OAAxB,CAAiCC,QAAjC,CAA2CC,eAA3C,CAAP,CACA,KAAKJ,KAAL,CAAWQ,GAAX,CAAeN,OAAf,CAAwBG,IAAxB,EACA,MAAOA,CAAAA,IAAP,CACD,CAxBH,wCA0BUA,IA1BV,CA0BqC,CACjC,GAAMI,CAAAA,QAAQ,CAAGJ,IAAI,CAACK,UAAL,EAAjB,CACA,GAAI,CAACD,QAAL,CAAe,CACb,KAAKT,KAAL,CAAWW,MAAX,CAAkBN,IAAI,CAACH,OAAvB,EACD,CACD,MAAOO,CAAAA,QAAP,CACD,CAhCH,mDAImD,CAC/C,GAAI,CAACV,0BAA0B,CAACa,QAAhC,CAA0C,CACxCb,0BAA0B,CAACa,QAA3B,CAAsC,GAAIb,CAAAA,0BAAJ,EAAtC,CACD,CACD,MAAOA,CAAAA,0BAA0B,CAACa,QAAlC,CACD,CATH","sourcesContent":["import { RNSharedElementNode } from './RNSharedElementNode';\nimport { IHTMLElement } from './types';\n\nexport class RNSharedElementNodeManager {\n  private nodes = new Map<HTMLElement, RNSharedElementNode>();\n  private static instance: RNSharedElementNodeManager;\n\n  static getInstance(): RNSharedElementNodeManager {\n    if (!RNSharedElementNodeManager.instance) {\n      RNSharedElementNodeManager.instance = new RNSharedElementNodeManager();\n    }\n    return RNSharedElementNodeManager.instance;\n  }\n\n  acquire(\n    domNode: IHTMLElement,\n    isParent: boolean,\n    ancestorDomNode: IHTMLElement\n  ): RNSharedElementNode {\n    let node = this.nodes.get(domNode);\n    if (node) {\n      node.addRef();\n      return node;\n    }\n    node = new RNSharedElementNode(domNode, isParent, ancestorDomNode);\n    this.nodes.set(domNode, node);\n    return node;\n  }\n\n  release(node: RNSharedElementNode) {\n    const refCount = node.releaseRef();\n    if (!refCount) {\n      this.nodes.delete(node.domNode);\n    }\n    return refCount;\n  }\n}\n"]}